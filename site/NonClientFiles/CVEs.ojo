<?xml version="1.0"?>
<BES> 
	<Wizard>
		<Title>CVEs</Title>
		<UIHooks Menu="(if (master flag of current console user) then &quot;&amp;Dashboards&quot; else &quot;&quot;)" NavBar="(if (master flag of current console user) then &quot;Dashboards&quot; else &quot;&quot;)" LaunchType="Document" RequiresAuthoring="false"></UIHooks>
		<DefaultPage>CVE</DefaultPage>
		<Page Name="CVE">
			<Title>Browse CVEs</Title>
			<HTML>
				<![CDATA[
					<script language="javascript" type="text/javascript" src="cve-sorttable.js"></script>
					<script language="javascript" type="text/javascript" src="cve.js"></script>
					<script language="VBScript" type="text/vbscript" src="cve.vbs"></script>
					<link type="text/css" rel="stylesheet" href="cve.css"></link>

					<body id="Body">
					<div class="msg" id="msg">The CVE data has not been<br/>imported into the dashboard<br/><a href="javascript:window.navigate('linkpage:CVE');">Refresh Page</a></div>
					<div>
						<table class="banner">
							<tr>
								<td style="font:bold 22px;" nowrap><a target=_cve href="https://nvd.nist.gov/">National Vulnerability Database</a> CVE Dashboard </td>
								<td nowrap style="vertical-align:middle;">v2.0.0</td>
								<td nowrap style="width:100%"><a href="https://forum.bigfix.com/t/cve-dashboard-extension/23158"><img border=0 src="cve-info.png" /></a></td>
								<td nowrap title="This is the page"><img border=0 src="cve-showcvesoff.png" /></td>
								<td nowrap title="Go to the Computer view"><a href="javascript:window.navigate('linkpage:Computers');"><img border=0 src="cve-showcomputers.png" /></a></td>
								<td nowrap title="Print - useful for PDF export"><a href="javascript:PrintDoc();"><img border=0 src="cve-print.png" /></a></td>
								<td nowrap title="Export to CSV tab delimited"><a href="javascript:CSVExport('cvetable');"><img border=0 src="cve-csv.png" /></a></td>
								<td nowrap title="Export to Excel"><a href="javascript:XLSExport('cvetable');"><img border=0 src="cve-xls.png" /></a></td>

								<td style="width:20px;"></td>

								<td nowrap title="Zoom out"><a href="javascript:Zoom('Out');"><img border=0 src="cve-zoomout.png" /></a></td>
								<td nowrap title="Zoom reset to normal"><a href="javascript:Zoom('Normal');"><img border=0 src="cve-100.png" /></a></td>
								<td nowrap title="Zoom in"><a href="javascript:Zoom('In');"><img border=0 src="cve-zoomin.png" /></a></td>
								<td nowrap title="Current zoom level"><div id="CurrentZoom">100%</div></td>
								<td id="ViewImage" nowrap title="View complete summary description"><a href="javascript:ViewSummary();"><img id="ViewSummary" border=0 src="cve-viewmore.png" /></a></td>
							</tr>
						</table>
						<table class="banner2">
							<tr>
								<td><img border=0 src="cve-search.png" /></td>
								<td>
									<div class="wrapper" style="width:138px;">
									<input class="Select" id="searchInput" style="color: #525252; width:140px;" name="filter" onkeyup="filter (this, 'cvetable');" onblur="SaveSettings('cves');" type="text">
									</div>
								</td>
								<td nowrap align=right><div id="cveCount">Loading the CVE data...</div></td>
								<td style="width:20px;"></td>
								
								<td><img border=0 src="cve-filter.png" /></td>
								<td>Year</td>
								<td>
									<div class="wrapper" style="width:100px;">
									 <select class="Select" id="cveYear" onchange="SaveSettings('cves'); ProcessFilters();" style="width:102px; color:#525252;">
									</select> 
									</div>
								</td>
								<td style="width:20px;"></td>

								<td nowrap>CVSS Score ></td>
								<td>
									<div class="wrapper" style="width:150px;">
									 <select class="Select" id="scoreSelect" onchange="SaveSettings('cves'); ProcessFilters();" style="width:152px;  color:#525252;">
									  <option value="9.0" style="color: #cc3333" selected>Critical 9.0-10.0</option>
									  <option value="7.0" style="color: #ff7f50">High 7.0-8.9</option>
									  <option value="4.0" style="color: #15428b">Medium 4.0-6.9</option>
									  <option value="0.1" style="color: #008800">Low 0.1-3.9</option>
									  <option value="0"   style="color: black">None 0.0</option>
									</select> 
									</div>
								</td>
								<td style="width:20px;"></td>

								<td nowrap>Vulnerable Computers =></td>
								<td style="width:100%;">
									<div class="wrapper" style="width:40px;">
									<input class="select" id="numComp" style="width:42px; color:#525252;" type="text" value=1 >
									</div>
								</td>
								<td nowrap class="timestamp" id="TimeStamp"></td>
							</tr>
						</table>
					</div>
					<div id="cveDiv"></div><br/></br>
					</body>


					<script>
					Zoom('Restore');
					AddYears();
					RestoreSettings('cves');
					ProcessFilters();
					sorttable.makeSortable(document.getElementById('cvetable'));
					document.getElementById('numComp').onkeydown=function(evt){
						var keyCode = evt ? (evt.which ? evt.which : evt.keyCode) : event.keyCode;
						if(keyCode == 13)
						{	SaveSettings('cves'); 
							ProcessFilters();	}
					}

					function ProcessFilters() {
						TimeStamp();
						
						var cveTable = '<table id="cvetable" class="sortable" style="table-layout: fixed;">' +
							'<thead><tr>' + 
								'<th width="120px;" nowrap>CVE ID</th>' + 
								'<th width="100px;">Published Date</th>' +
								'<th width="100px;">Source</th>' + 
								'<th width="80px;">CVSS<br/>Score</th>' + 
								'<th width="80px;">Related<br/>Fixlets</th>' + 
								'<th width="110px;" title="Computer affected, relevant to the Fixlets">Vulnerable<br/>Computers</th>' + 
								'<th width="110px;">Total<br/>Computers</th>' + 
								'<th width="110px;" title="CVSS Score * Vulnerable Computers">Cumulative<br/>Score</th>' + 
								'<th width="110px;" title="(Total Computers - Vulnerable Computers) / Total Computers">CVE<br/>Compliance</th>' + 
								'<th width="40%">Summary</th>' + 
							'</tr></thead><tbody>';
						var highestCumScore = 0;

						try {
							var yearObj = document.getElementById('cveYear');
							var yearValue = yearObj.options[yearObj.selectedIndex].value;
						}
						catch (err) {
							document.getElementById('cveYear').selectedIndex = '0';
						}

						var yearValues = [];
						for (var i = 0; i < yearObj.options.length-1; i++) {
						  if (yearObj.options[i].value) yearValues.push(yearObj.options[i].value);
						}
						
						for (y = 0; y < yearValues.length; y++)
						{
							var cveXml;
							if (yearValue == "All")
								cveXml = EvaluateRelevance('values of variables whose (name of it = "' + yearValues[y] + '") of bes wizards');
							else
							{
								cveXml = EvaluateRelevance('values of variables whose (name of it = "' + yearValue + '") of bes wizards');
								y = 99; // Single year selection, we are done
							}

							var parseXml = function(xmlStr) {
								var xmlDoc = new window.ActiveXObject('Microsoft.XMLDOM');
								xmlDoc.async = 'false';
								xmlDoc.loadXML(xmlStr);
								return xmlDoc;	};

							var xmlDoc = parseXml(cveXml[0]);
							var x = xmlDoc.getElementsByTagName('entry');
							var xlength = x.length;
							var vulnCompFilter = document.getElementById('numComp').value;
							for (i = 1; i < xlength; i++) { 
								var numComputers = x[i].getElementsByTagName('computers')[0].childNodes[0].nodeValue;
								if (parseInt(numComputers) >= parseInt(vulnCompFilter))
								{
									var numFixlets = x[i].getElementsByTagName('fixlets')[0].childNodes[0].nodeValue;
									var oneRow = '<tr>';
									var cveNo = x[i].getElementsByTagName('vuln:cve-id')[0].childNodes[0].nodeValue
									oneRow += '<td nowrap><a target=_cve href=https://web.nvd.nist.gov/view/vuln/detail?vulnId=' + cveNo + '>' + cveNo + '</a></td>';
									var rel = '(td "align=right" of (it as string) of number of elements of it & td "align=right" of (it as string) of sum of applicable computer counts of elements of it) of sets of bes fixlets whose (cve id list of it contains "' + cveNo + '")';
									oneRow += '<td nowrap>' + x[i].getElementsByTagName('vuln:published-datetime')[0].childNodes[0].nodeValue.substring(0,10) + '</td>';
									var source = new String ((x[i].getElementsByTagName('source').length == 0 ? '--' : x[i].getElementsByTagName('source')[0].childNodes[0].nodeValue));
									oneRow += '<td nowrap>' + source + '</td>';
									var score = (x[i].getElementsByTagName('cvss:score').length == 0 ? 0 : x[i].getElementsByTagName('cvss:score')[0].childNodes[0].nodeValue );
									var scoreSelectObj = document.getElementById('scoreSelect');
									var scoreSelectValue = scoreSelectObj.options[scoreSelectObj.selectedIndex].value;
									if (score >= scoreSelectValue)
										oneRow += '<td class="right">' + cveScoreColor(score) + '</td>';
									else continue;

									if (numFixlets == '0')
										oneRow += '<td class="right">' + numFixlets + '</td>';
									else
										oneRow += '<td class="right"><a href="javascript:OpenFixlets(\'' + cveNo + '\')">' + numFixlets + '</a></td>';

									if (numComputers == '0')
										oneRow += '<td class="right">' + numComputers + '</td>';
									else if (parseInt(numComputers, 10) >= parseInt(document.getElementById('numComp').value), 10)
										oneRow += '<td class="right"><a href="javascript:OpenComputers(\'' + cveNo + '\')">' + numComputers + '</td>';
									else continue;

									var subcribedComputers = x[i].getElementsByTagName('totalsubscribed')[0].childNodes[0].nodeValue;
									oneRow += '<td class="right">' + subcribedComputers + '</td>';

									var cumScore = (parseFloat(score) * parseFloat(numComputers));
									oneRow += '<td class="right">' +  (cumScore < 100 ? cumScore.toFixed(1) : cumScore.toFixed(0) ) + '</td>';

									if (cumScore > highestCumScore)	highestCumScore = cumScore;

									if (subcribedComputers == 0)
										oneRow += '<td class="right">--</td>';
									else 
									{	var compliancePct = ( (parseFloat(subcribedComputers) - parseFloat(numComputers)) / parseFloat(subcribedComputers)) * 100;
										/*
										oneRow += '<td class="tdbar">' + 
												'<div class="bgbar" style="width: ' + (100-compliancePct.toFixed(0)) + '%; background-color: ' + complianceBgColor(compliancePct) + '"></div>' +
												'<div class="bgbarshell" style="border-color: ' + complianceBgColor(compliancePct) + ';">' + complianceColor(compliancePct.toFixed(0)) + '</div>' +
												'</td>';	}
										*/
										oneRow += '<td class="right" style="background-color: ' +  complianceBgColor(compliancePct) + ';">' +  complianceColor(compliancePct.toFixed(1)) + '</td>';	
									}

									oneRow += '<td ' + 'title="' + x[i].getElementsByTagName('vuln:summary')[0].childNodes[0].nodeValue + '"><p class="view-ellipsis">' + x[i].getElementsByTagName('vuln:summary')[0].childNodes[0].nodeValue + '</p></td>';
									// oneRow += '<td>' + x[i].getElementsByTagName('vuln:summary')[0].childNodes[0].nodeValue + '</td>';
									oneRow += '</tr>';
									cveTable += oneRow;
								}
							}
						}
						cveTable += '</tbody></table>';

						var cveId = document.getElementById('cveDiv');
						cveId.innerHTML = cveTable;
						var processedCVETable = document.getElementById('cvetable');

						document.getElementById('cveCount').innerHTML = (processedCVETable.rows.length -1) + ' items';

						filter (document.getElementById('searchInput'), 'cvetable');
						sorttable.makeSortable(processedCVETable);

						// Remember and use the last sort column
						var currentCVESortColumn = EvaluateRelevance('(if (length of it = 0) then ("7") else (it)) of value of private variable whose (name of it = "CurrentCVESortColumn") of current wizard | "7"');

						var myTH;
						// If there are any problems with save sort column, default to 7 Commulative Score
						myTH = document.getElementsByTagName('th')[currentCVESortColumn];
						var currentCVESortDir = EvaluateRelevance('(if (length of it = 0) then ("desc") else (it)) of value of private variable whose (name of it = "CurrentCVESortDir") of current wizard | "desc"');
						try {
							sorttable.innerSortFunction.apply(myTH, []);
						} catch (err) {
							myTH = document.getElementsByTagName('th')[7];
							sorttable.innerSortFunction.apply(myTH, []);
						}

						if (currentCVESortDir == 'asc')
							sorttable.innerSortFunction.apply(myTH, []);

						// Save the current sorted column index
						processedCVETable.onclick = function (event) {
							if (window.event.srcElement.tagName == 'TH')
							{
								external.StoreVariable( '<?relevance dashboard id of current wizard ?>', 'CurrentCVESortColumn', window.event.srcElement.cellIndex, true);
								if (window.event.srcElement.innerHTML.indexOf('webdings>5') != -1)
									external.StoreVariable( '<?relevance dashboard id of current wizard ?>', 'CurrentCVESortDir', 'asc', true);
								else
									external.StoreVariable( '<?relevance dashboard id of current wizard ?>', 'CurrentCVESortDir', 'desc', true);
							}
						};

						// Finding the Cumulative Score column index
						var cumScoreCol = '';
						for (m = 0; m < processedCVETable.rows[0].cells.length; m++)
						{
							if (processedCVETable.rows[0].cells[m].innerHTML.indexOf('Cumulative') !== -1)
								cumScoreCol = m;
						}

						for (k = 0; k < processedCVETable.rows.length; k++) 
							cumScoreColor(highestCumScore.toFixed(0), processedCVETable.rows[k], cumScoreCol);

					}
					</script>
				]]>
			</HTML>
		</Page>
		<Page Name="FixletDetails">
			<Title>Browse CVEs</Title>
			<HTML>
				<![CDATA[
					<script language="javascript" type="text/javascript" src="cve-sorttable.js"></script>
					<script language="javascript" type="text/javascript" src="cve.js"></script>
					<script language="VBScript" type="text/vbscript" src="cve.vbs"></script>
					<link type="text/css" rel="stylesheet" href="cve.css"></link>
					<body>
					<div>
						<table class="banner">
							<tr><td style="font:bold 22px;" nowrap>Fixlets relating to <?relevance value of private variable whose (name of it = "CurrentCVE") of current wizard ?></td>
							<td align=left style="width:100%;"><a href="linkpage:CVE"><img border=0 src="cve-back.png" /></a></td>
							<td nowrap title="Print - useful for PDF export"><a href="javascript:PrintDoc();"><img border=0 src="cve-print.png" /></a></td>
							<td nowrap title="Export to CSV tab delimited"><a href="javascript:CSVExport('fixletdetails');"><img border=0 src="cve-csv.png" /></a></td>
							<td nowrap title="Export to Excel"><a href="javascript:XLSExport('fixletdetails');"><img border=0 src="cve-xls.png" /></a></td>
							</tr>
						</table></div>

					<div id="fixletsTable">
						Loading...
					</div>
					</body>
					<script>
						Zoom('Restore');
						var currentCVE = EvaluateRelevance('value of private variable whose (name of it = "CurrentCVE") of current wizard');

						var currentFixletsHead = '<table id="fixletdetails" class=sortable><thead>' +
							'<th>Fixlet Name</th>' +
							'<th>Site Name</th>' + 
							'<th>Related CVEs</th>' +
							'<th>Source</th>' +
							'<th>Source Severity</th>' +
							'<th>Category</th>' +
							'<th nowrap>Source Release Date</th></thead>';
 
						var currentFixlets = EvaluateRelevance('concatenation of trs of (td of link of it & td "nowrap" of display name of site of it & td "style=%22width=20%25%22" of cve id list of it & td of source of it & td of source severity of it & td of category of it & td of ((it as string) of (year of it as string & "-" & month of it as two digits & "-" & day_of_month of it as two digits & " (" & day_of_week of it as three letters & ")") of source release date of it | "None")) of bes fixlets whose (cve id list of it contains "' + currentCVE + '" )');

						document.getElementById('fixletsTable').innerHTML = currentFixletsHead + currentFixlets;
					</script>
				]]>
			</HTML>
		</Page>
		<Page Name="ComputerDetails">
			<Title>Browse CVEs</Title>
			<HTML>
				<![CDATA[
					<script language="javascript" type="text/javascript" src="cve-sorttable.js"></script>
					<script language="javascript" type="text/javascript" src="cve.js"></script>
					<script language="VBScript" type="text/vbscript" src="cve.vbs"></script>
					<link type="text/css" rel="stylesheet" href="cve.css"></link>
					<body>
					<div>
						<table class="banner">
							<tr><td nowrap style="font:bold 22px;">Computers relating to <?relevance value of private variable whose (name of it = "CurrentCVE") of current wizard ?></td>
							<td align=left style="width:100%;"><a href="linkpage:CVE"><img border=0 src="cve-back.png" /></a></td>
							<td nowrap title="Print - useful for PDF export"><a href="javascript:PrintDoc();"><img border=0 src="cve-print.png" /></a></td>
							<td nowrap title="Export to CSV tab delimited"><a href="javascript:CSVExport('computerdetails');"><img border=0 src="cve-csv.png" /></a></td>
							<td nowrap title="Export to Excel"><a href="javascript:XLSExport('computerdetails');"><img border=0 src="cve-xls.png" /></a></td>
							</tr>
						</table></div>
					<div id="computersTable">
						Loading...
					</div>
					</body>
					<script>
						Zoom('Restore');
						var currentCVE = EvaluateRelevance('value of private variable whose (name of it = "CurrentCVE") of current wizard');
						var currentComputersHead = '<table id="computerdetails" class=sortable><thead>' +
							'<th>Computer Name</th>' +
							'<th>IP Address</th>' + 
							'<th>Last Report Time</th>' +
							'<th>Operating System</th>' +
							'<th>Device Type</th></thead>';

						var currentComputers = EvaluateRelevance('concatenation of trs of (td of links of it & td of concatenation (html "<br/>" ) of (ip addresses of it as string) of it & td of (it as string) of last report times of it & td of operating systems of it & td of device types of it) of elements of set of applicable computers of bes fixlets whose (cve id list of it contains "' + currentCVE + '")');
						document.getElementById('computersTable').innerHTML = currentComputersHead + currentComputers;
					</script>
				]]>
			</HTML>
		</Page>
		<Page Name="Computers">
			<Title>Browse CVEs</Title>
			<HTML>
				<![CDATA[
					<script language="javascript" type="text/javascript" src="cve-sorttable.js"></script>
					<script language="javascript" type="text/javascript" src="cve.js"></script>
					<script language="VBScript" type="text/vbscript" src="cve.vbs"></script>
					<link type="text/css" rel="stylesheet" href="cve.css"></link>
					<body>
					<div>

						<table class="banner">
							<tr>
								<td style="font:bold 22px;" nowrap><a target=_cve href="https://nvd.nist.gov/">National Vulnerability Database</a> CVE Dashboard </td>
								<td nowrap style="width:100%; vertical-align:text-top;"><a href="https://forum.bigfix.com/t/cve-dashboard-extension/23158"><img border=0 src="cve-info.png" /></a></td>
								<td nowrap title="This is the page"><a href="javascript:window.navigate('linkpage:CVE');"><img border=0 src="cve-showcves.png" /></a></td>
								<td nowrap title="Go to the Computer view"><img border=0 src="cve-showcomputersoff.png" /></td>
								<td nowrap title="Print - useful for PDF export"><a href="javascript:PrintDoc();"><img border=0 src="cve-print.png" /></a></td>
								<td nowrap title="Export to CSV tab delimited"><a href="javascript:CSVExport('computertable');"><img border=0 src="cve-csv.png" /></a></td>
								<td nowrap title="Export to Excel"><a href="javascript:XLSExport('computertable');"><img border=0 src="cve-xls.png" /></a></td>

								<td style="width:20px;"></td>

								<td nowrap title="Zoom out"><a href="javascript:Zoom('Out');"><img border=0 src="cve-zoomout.png" /></a></td>
								<td nowrap title="Zoom reset to normal"><a href="javascript:Zoom('Normal');"><img border=0 src="cve-100.png" /></a></td>
								<td nowrap title="Zoom in"><a href="javascript:Zoom('In');"><img border=0 src="cve-zoomin.png" /></a></td>
								<td nowrap title="Current zoom level"><div id="CurrentZoom">100%</div></td>
							</tr>
						</table>
					
						<table class="banner2">
							<tr>
								<td><img border=0 src="cve-search.png" /></td>
								<td>
									<div class="wrapper" style="width:138px;">
									<input class="Select" id="searchComputer" style="color: #4f6b72; width:140px;" name="filter" onkeyup="filter (this, 'computertable');" onblur="SaveSettings('computers');" type="text">
									</div>
								</td>
								<td nowrap align=right><div id="computerCount">Loading the Computer data...</div></td>

								<td style="width:20px;"></td>
								<td><img border=0 src="cve-filter.png" /></td>
								<td>Computer Group </td>
								<td>
									<div class="wrapper" style="width:120px;">
									 <select id="cgSelect" onchange="SaveSettings('computers'); ProcessFilters();" class="Select" style="width:122px; color:#525252;">
									</select> 
									</div>
								</td>
								<td style="width:20px;"></td>

								<td nowrap>OS </td>
								<td>
									<div class="wrapper" style="width:160px;">
									 <select id="osSelect" onchange="SaveSettings('computers'); ProcessFilters();" class="Select" style="width:162px;  color:#525252;">
									</select> 
									</div>
								</td>
							</tr>
						</table>
					</div>
					<div id="computerDiv"></div><br/></br>
					</body>

					<script>
					Zoom('Restore');
					PopulateDropLists();
					RestoreSettings('computers');
					ProcessFilters();
					sorttable.makeSortable(document.getElementById('computertable'));

					function ProcessFilters() {

						var cveXml = EvaluateRelevance('values of variables whose (name of it = "CVEComputers") of bes wizards');
						var parseXml;
						parseXml = function(xmlStr) {
							var xmlDoc = new window.ActiveXObject('Microsoft.XMLDOM');
							xmlDoc.async = 'false';
							xmlDoc.loadXML(xmlStr);
							return xmlDoc;
						};

						var xmlDoc = parseXml(cveXml[0]);
						var x = xmlDoc.getElementsByTagName('computer');
						var computerTable = '<table id="computertable" class="sortable" style="border-style:solid; border-width:1px 1px 1px 1px;">' +
							'<thead><tr>' + 
							'<th nowrap>Computer ID</th>' + 
							'<th>Name</th>' +
							'<th>Risk Score</th>' +
							'<th>IP Address</th>' +
							'<th>Device Type</th>' +
							'<th>Operating System</th>' +
							'<th>Computer Groups</th>' +
							'</tr></thead><tbody>';
						var i;
						var oneRow = '';
						var highestRiskScore = 0;

						for (i = 0; i < x.length; i++) { 
								var currentOs = x[i].getElementsByTagName('os')[0].childNodes[0].nodeValue;
								var selectedOs;
								try {
									selectedOs = document.getElementById('osSelect').options[document.getElementById('osSelect').selectedIndex].value;
								} catch (err) {
									selectedOs = 'All';
									document.getElementById('osSelect').value = 'All';
								}
								if (currentOs != selectedOs && selectedOs != 'All')
									continue;

								var currentCg;
								if (x[i].getElementsByTagName('cg')[0].childNodes.length == 0)
									currentCg = 'xxxx';
								else
									currentCg = x[i].getElementsByTagName('cg')[0].childNodes[0].nodeValue;
								var selectedCg;
								try {
									selectedCg = document.getElementById('cgSelect').options[document.getElementById('cgSelect').selectedIndex].value;
								} catch (err) {
									selectedCg = 'All';
									document.getElementById('cgSelect').value = 'All';
								}
								if (currentCg.indexOf(selectedCg) == -1 && selectedCg != 'All')
									continue;

								oneRow = '';
								oneRow += '<tr>';
								oneRow += '<td nowrap align=right style="padding-right:60px;">' + x[i].getElementsByTagName('id')[0].childNodes[0].nodeValue + '</td>';
								oneRow += '<td nowrap><a href="linkid:opencomputer(' + x[i].getElementsByTagName('id')[0].childNodes[0].nodeValue + ')">' + x[i].getElementsByTagName('name')[0].childNodes[0].nodeValue + '</a></td>';
								var riskScore = parseFloat(x[i].getElementsByTagName('riskscore')[0].childNodes[0].nodeValue);
								oneRow += '<td nowrap align=right style="padding-right:60px;">' +  (riskScore < 100 ? riskScore.toFixed(1) : riskScore.toFixed(0) ) + '</td>';
								if (riskScore > highestRiskScore)
										highestRiskScore = riskScore;

								oneRow += '<td nowrap>' + x[i].getElementsByTagName('ip')[0].childNodes[0].nodeValue + '</td>';
								oneRow += '<td nowrap>' + x[i].getElementsByTagName('devicetype')[0].childNodes[0].nodeValue + '</td>';
								oneRow += '<td nowrap>' + currentOs + '</td>';
								// alert(x[i].getElementsByTagName('cg')[0].childNodes.length);
								if (x[i].getElementsByTagName('cg')[0].childNodes.length != 0)
								{
									// alert(x[i].getElementsByTagName('cg')[0].childNodes[0].nodeValue);
									oneRow += '<td nowrap>' + x[i].getElementsByTagName('cg')[0].childNodes[0].nodeValue + '</td>';
								}
								else
									oneRow += '<td nowrap></td>';

								oneRow += '</tr>';
								computerTable += oneRow;
						}
						computerTable += '</tbody></table>';
						var computerId = document.getElementById('computerDiv');
						computerId.innerHTML = computerTable;
						var processedComputerTable = document.getElementById('computerTable');
						document.getElementById('computerCount').innerHTML = (processedComputerTable.rows.length -1) + ' items';

						filter (document.getElementById('searchComputer'), 'computerTable');
						sorttable.makeSortable(processedComputerTable);

						var myTH = document.getElementsByTagName('th')[2];
						sorttable.innerSortFunction.apply(myTH, []);

						var riskScoreCol = '';
						for (m = 0; m < processedComputerTable.rows[0].cells.length; m++)
						{
							if (processedComputerTable.rows[0].cells[m].innerHTML.indexOf('Risk Score') !== -1)
								riskScoreCol = m;
						}

						for (k = 0; k < processedComputerTable.rows.length; k++) 
							RiskScoreColor(highestRiskScore.toFixed(0), processedComputerTable.rows[k], riskScoreCol);
					}

					function PopulateDropLists() {
						// Populate OSes
						var oses = EvaluateRelevance('"All"; unique values of operating systems of bes computers');
						var x = document.getElementById('osSelect');
						RemoveOptions(x);
						for (i = 0; i < oses.length ; i++)
						{
							var option = document.createElement('option');
							option.value = oses[i];
							option.text = oses[i];
							x.add(option);
						}						
						
						// Populate Computer Groups
						var cg = EvaluateRelevance('"All" ; unique values of names of bes computer groups');
						var x = document.getElementById('cgSelect');
						RemoveOptions(x);
						for (i = 0; i < cg.length ; i++)
						{
							var option = document.createElement('option');
							option.value = cg[i];
							option.text = cg[i];
							x.add(option);
						}						
					}

					function filter (phrase, _id){
						if (phrase.value.length > 0 && phrase.value.length < 4) return;
						var words = phrase.value.toLowerCase().split(" ");
						var table = document.getElementById(_id); var ele; var cnt = 0; 
						for (var r = 1; r < table.rows.length; r++){
							ele = table.rows[r].innerHTML.replace(/<[^>]+>/g,"");
								var displayStyle = 'none';
								for (var i = 0; i < words.length; i++) {
									if (ele.toLowerCase().indexOf(words[i])>=0) { displayStyle = ''; }
									else { displayStyle = 'none'; break; } }
							table.rows[r].style.display = displayStyle;
							if (displayStyle == '')	cnt++; }
						document.getElementById('computerCount').innerHTML = cnt + ' of ' + (table.rows.length - 1) + ' items';
					}

					</script>
				]]>
			</HTML>
		</Page>
	</Wizard>
</BES>
